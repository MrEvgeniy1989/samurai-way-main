{"version":3,"file":"static/js/478.a392052e.chunk.js","mappings":"2MACA,EAA0B,0BAA1B,EAAoE,gCAApE,EAAoH,gCAApH,EAAqK,iCAArK,EAAsN,gC,4BCOzMA,EAAqB,WAChC,OACE,0BACE,SAACC,EAAD,OAKAA,EAAiB,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,UAS/D,OAPAI,EAAAA,EAAAA,YAAU,WAER,OADAN,GAASO,EAAAA,EAAAA,OACF,WACLP,GAASQ,EAAAA,EAAAA,UAEV,KAGD,2BACc,UAAXN,IAAsB,0EACvB,iCACE,0BACE,SAACO,EAAD,OAEF,mBACA,gBAAKC,UAAWC,EAAhB,UACE,SAACC,EAAD,aAOJH,EAAyB,SAAC,IC5CjB,SAAmCI,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCD2CC,IACtC,IAAMC,GAAWZ,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKU,YAC3DC,GAAoBC,EAAAA,EAAAA,QAAuB,MACjD,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAiBA,OANAd,EAAAA,EAAAA,YAAU,WACW,IAAD,EAAda,IACF,UAAAH,EAAkBK,eAAlB,SAA2BC,eAAe,CAAEC,SAAU,cAEvD,CAACR,KAGF,iBAAKS,MAAO,CAAEC,OAAQ,QAASC,UAAW,QAAUC,SAhBhC,SAACC,GACrB,IAAMC,EAAUD,EAAEE,cACdC,KAAKC,IAAIH,EAAQI,aAAeJ,EAAQK,UAAYL,EAAQM,cAAgB,KAC7EhB,GAAgBC,GAAgB,GAEjCD,GAAgBC,GAAgB,IAWlC,UACGL,EAASqB,KAAI,SAACC,GAAD,OACZ,SAACC,EAAD,CAAoBC,QAASF,GAAfA,EAAEG,QAElB,gBAAKC,IAAKzB,QAKVsB,EAAqDI,EAAAA,MAAW,YAAkB,IAAfH,EAAc,EAAdA,QACvE,OACE,iBAAK7B,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBAAKgC,IAAKJ,EAAQK,MAAOC,IAAK,cAEhC,iBAAKnC,UAAWC,EAAhB,WACE,uBAAI4B,EAAQO,WACXP,EAAQA,YAEX,wBAKA3B,EAA+B,WACnC,OAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOqB,EAAP,KAAgBQ,EAAhB,KACM/C,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,UAUvD8C,EAAaC,EAAAA,EAAAA,SAErB,OACE,iBAAKvC,UAAWC,EAAhB,WACE,SAACqC,EAAD,CAAUE,SAAU,SAACtB,GAAD,OAAOmB,EAAWnB,EAAEE,cAAcqB,QAAQA,MAAOZ,KAErE,SAAC,IAAD,CAAQa,SAAqB,UAAXlD,EAAoBmD,QAdf,WACpBd,IAGLvC,GAASsD,EAAAA,EAAAA,IAAYf,IACrBQ,EAAW,MAST","sources":["webpack://samurai-way/./src/pages/Chat/ChatPage.module.css?29d9","pages/Chat/ChatPage.tsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"message\":\"ChatPage_message__ekaVF\",\"message__user\":\"ChatPage_message__user__QdWKY\",\"message__text\":\"ChatPage_message__text__3gkg-\",\"addMessageForm\":\"ChatPage_addMessageForm__aMkhb\",\"message__form\":\"ChatPage_message__form__683ZH\"};","import React, { useEffect, useRef, useState } from \"react\";\nimport { ChatMessageAPIType } from \"../../api/chat-api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendMessage, startMessagesListening, stopMessagesListening } from \"../../redux/chat-reducer\";\nimport { AppStateType } from \"../../redux/redux-store\";\nimport s from \"./ChatPage.module.css\";\nimport { Button, Input } from \"antd\";\n\nexport const ChatPage: React.FC = () => {\n  return (\n    <div>\n      <Chat />\n    </div>\n  );\n};\n\nconst Chat: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const status = useSelector((state: AppStateType) => state.chat.status);\n\n  useEffect(() => {\n    dispatch(startMessagesListening());\n    return () => {\n      dispatch(stopMessagesListening());\n    };\n  }, []);\n\n  return (\n    <div>\n      {status === \"error\" && <div>Some error occured. Please refresh the page</div>}\n      <>\n        <div>\n          <Messages />\n        </div>\n        <hr />\n        <div className={s.addMessageForm}>\n          <AddMessageForm />\n        </div>\n      </>\n    </div>\n  );\n};\n\nconst Messages: React.FC<{}> = ({}) => {\n  const messages = useSelector((state: AppStateType) => state.chat.messages);\n  const messagesAnchorRef = useRef<HTMLDivElement>(null);\n  const [isAutoScroll, setIsAutoScroll] = useState(true);\n\n  const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n    const element = e.currentTarget;\n    if (Math.abs(element.scrollHeight - element.scrollTop - element.clientHeight) < 300) {\n      !isAutoScroll && setIsAutoScroll(true);\n    } else {\n      isAutoScroll && setIsAutoScroll(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isAutoScroll) {\n      messagesAnchorRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [messages]);\n\n  return (\n    <div style={{ height: \"600px\", overflowY: \"auto\" }} onScroll={scrollHandler}>\n      {messages.map((m) => (\n        <Message key={m.id} message={m} />\n      ))}\n      <div ref={messagesAnchorRef}></div>\n    </div>\n  );\n};\n\nconst Message: React.FC<{ message: ChatMessageAPIType }> = React.memo(({ message }) => {\n  return (\n    <div className={s.message}>\n      <div className={s.message__user}>\n        <img src={message.photo} alt={\"avatar\"} />\n      </div>\n      <div className={s.message__text}>\n        <b>{message.userName}</b>\n        {message.message}\n      </div>\n      <hr />\n    </div>\n  );\n});\n\nconst AddMessageForm: React.FC<{}> = () => {\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const status = useSelector((state: AppStateType) => state.chat.status);\n\n  const sendMessageHandler = () => {\n    if (!message) {\n      return;\n    }\n    dispatch(sendMessage(message));\n    setMessage(\"\");\n  };\n\n  const { TextArea } = Input;\n\n  return (\n    <div className={s.message__form}>\n      <TextArea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></TextArea>\n\n      <Button disabled={status !== \"ready\"} onClick={sendMessageHandler}>\n        Send\n      </Button>\n    </div>\n  );\n};\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"names":["ChatPage","Chat","dispatch","useDispatch","status","useSelector","state","chat","useEffect","startMessagesListening","stopMessagesListening","Messages","className","s","AddMessageForm","obj","TypeError","messages","messagesAnchorRef","useRef","useState","isAutoScroll","setIsAutoScroll","current","scrollIntoView","behavior","style","height","overflowY","onScroll","e","element","currentTarget","Math","abs","scrollHeight","scrollTop","clientHeight","map","m","Message","message","id","ref","React","src","photo","alt","userName","setMessage","TextArea","Input","onChange","value","disabled","onClick","sendMessage"],"sourceRoot":""}